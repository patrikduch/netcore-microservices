@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>
<h3>Register</h3>

<EditForm Model="_user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="_user.Email" class="form-control" type="email"/>
        <ValidationMessage For="@(() => _user.Email)" />
    </div>

    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="_user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => _user.Password)" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="_user.ConfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="@(() => _user.Password)" />
    </div>
    <button class="btn btn-primary">Submit</button>
    <div class="@_messageCssClass">
        <span>@_message</span>
    </div>
</EditForm>

@code {
    private UserRegister _user = new UserRegister();
    private string _message = string.Empty;
    private string _messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(_user);

        _message = result.Message;

        if (result.Success)
        {
            _messageCssClass = "text-success";
        }
        else
        {
            _messageCssClass = "text-danger";
        }
    }
}