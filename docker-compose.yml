version: '3.4'

services:
  #web.gw:
  #  image: ${DOCKER_REGISTRY-}webgw
  #  build:
  #    context: .
  #    dockerfile: src/services/API-Gws/Web.Gw/Dockerfile

  product.api:
    image: ${DOCKER_REGISTRY-}productapi
    build:
      context: .
      dockerfile: src/services/Product/Product.API/Dockerfile
  product.db:
    image: postgres:14
  user.api:
    image: ${DOCKER_REGISTRY-}userapi
    build:
      context: .
      dockerfile: src/services/User/User.API/Dockerfile
  user.db:
    image: postgres:14
  projectdetail.api:
    image: ${DOCKER_REGISTRY-}projectdetailapi
    build:
      context: .
      dockerfile: src/services/ProjectDetail/ProjectDetail.API/Dockerfile
      args:
        - NUGET_PAT
  projectdetail.db:
    image: mcr.microsoft.com/mssql/server:2017-latest
  #web.blazor.server:
  #  image: ${DOCKER_REGISTRY-}webblazorserver
  #  build:
  #    context: .
  #    dockerfile: src/webapps/Web.Blazor/Server/Dockerfile

 
  #basketdb:
  #  image: redis
  
  #discount.db:
  #  image: postgres

  pgadmin:
    image: dpage/pgadmin4

  #mongo.db:
  #  image: mongo

  #gamecatalog.db:
  #  image: mongo

  order.db:
    image: mcr.microsoft.com/mssql/server:2017-latest

  #customer.db:
  #  image: mcr.microsoft.com/mssql/server:2017-latest

  rabbitmq:
    image: rabbitmq:3-management-alpine

  #web.mvc:
  #  image: ${DOCKER_REGISTRY-}webmvc
  #  build:
  #    context: .
  #    dockerfile: src/webapps/Web.Mvc/Dockerfile

  #catalog.api:
  #  image: ${DOCKER_REGISTRY-}catalogapi
  #  build:
  #    context: .
  #    dockerfile: src/services/Catalog/Catalog.API/Dockerfile
  #    args:
  #      - NUGET_PAT

  #basket.api:
  #  image: ${DOCKER_REGISTRY-}basketapi
  #  build:
  #    context: .
  #    dockerfile: src/services/Basket/Basket.API/Dockerfile

  #discount.grpc:
  #  image: ${DOCKER_REGISTRY-}discountgrpc
  #  build:
  #    context: .
  #    dockerfile: src/services/Discount/Discount.Grpc/Dockerfile
  
  #discount.api:
  #  image: ${DOCKER_REGISTRY-}discountapi
  #  build:
  #    context: .
  #    dockerfile: src/services/Discount/Discount.API/Dockerfile

  #gamecatalog.api:
  #  image: ${DOCKER_REGISTRY-}gamecatalogapi
  #  build:
  #    context: .
  #    dockerfile: src/services/GameCatalog/GameCatalog.API/Dockerfile
  #    args:
  #      - NUGET_PAT

  #signalr.api:
  #  image: ${DOCKER_REGISTRY-}signalrapi
  #  build:
  #    context: .
  #    dockerfile: src/services/SignalR.API/Dockerfile

  #inventory.api:
  #  image: ${DOCKER_REGISTRY-}inventoryapi
  #  build:
  #    context: .
  #    dockerfile: src/services/Inventory/Inventory.API/Dockerfile
  #    args:
  #      - NUGET_PAT

  #web.spa:
  #  image: ${DOCKER_REGISTRY-}webspa
  #  build:
  #    context: .
  #    dockerfile: src/webapps/Web.Spa/Dockerfile


  #realtimetransmission.api:
  #  image: ${DOCKER_REGISTRY-}realtimetransmissionapi
  #   build:
  #    context: .
  #    dockerfile: src/services/RealTimeTransmission/RealTimeTransmission.API/Dockerfile


  #ordering.api:
  #  image: ${DOCKER_REGISTRY-}orderingapi
  #  build:
  #    context: .
  #    dockerfile: src/services/Ordering/Ordering.API/Dockerfile
  #    args:
  #      - NUGET_PAT

  #customer.api:
  #  image: ${DOCKER_REGISTRY-}customerapi
  #  build:
  #    context: .
  #    dockerfile: src/services/Customer/Customer.API/Dockerfile
  #    args:
  #      - NUGET_PAT



  identityauth:
    image: ${DOCKER_REGISTRY-}identityauth
    build:
      context: .
      dockerfile: src/services/IdentityAuth/Dockerfile

  web.gw:
    image: ${DOCKER_REGISTRY-}webgw
    build:
      context: .
      dockerfile: src/services/API-Gws/Web.Gw/Dockerfile

  web.mvc:
    image: ${DOCKER_REGISTRY-}webmvc
    build:
      context: .
      dockerfile: src/webapps/Web.Mvc/Dockerfile

volumes:
  product_db_data:
  user_db_data:
  postgres_data:
  pgadmin_data:
  rabbitmq_data:

   









































